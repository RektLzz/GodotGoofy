[gd_scene load_steps=11 format=3 uid="uid://866rmtc8f47j"]

[ext_resource type="Texture2D" uid="uid://c6j0u3s83t14m" path="res://Sprites/Player/Player_Spritesheet.png" id="1_nvqm5"]

[sub_resource type="GDScript" id="GDScript_dtn1b"]
script/source = "extends CharacterBody2D

const SPEED = 200.0
const JUMP_VELOCITY = -300.0
var gravity = 980.0
@onready var sprite : Sprite2D
@onready var animator : AnimationPlayer
@onready var marker : Marker2D
var jumped = false
var groundDust : CPUParticles2D
var groundDustPos
@onready var JumpBufferTimer = $JumpBuffer
@onready var CoyoteTimer = $Coyote

# Preloaded assets
var bullet = preload(\"res://Scenes/Projectiles/Bullet.tscn\")
@export var turnDust : PackedScene

func _ready():
	# Get the gravity from the project settings to be synced with RigidBody nodes.
	sprite = $Sprite2D
	animator = $AnimationPlayer
	groundDust = $groundDustParticles
	groundDust.emitting = false
	
	set_process_input(true)
	
func _input(event):
	if Input.is_action_just_pressed(\"click\"):
		var new_bullet = bullet.instantiate()
		add_child(new_bullet)
		new_bullet._spawn(position, playerPointing(), 400, 10, 5, \"Enemy\")
	
func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y += gravity * delta
	else:
		CoyoteTimer.start()
		jumped = false
	
	if Input.is_action_just_pressed(\"Jump\"):
		JumpBufferTimer.start()

	# Handle jump.
	if CoyoteTimer.time_left > 0 and JumpBufferTimer.time_left > 0:
		jumped = true
		velocity.y = JUMP_VELOCITY
		CoyoteTimer.stop()
		JumpBufferTimer.stop()
	
	# Flip
	flip()
	
	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var direction = Input.get_axis(\"K_Left\", \"K_Right\")
	
	if Input.is_action_just_pressed(\"K_Left\") or Input.is_action_just_pressed(\"K_Right\"):
		if is_on_floor():
			var new_turnDust = turnDust.instantiate()
			add_child(new_turnDust)
			new_turnDust.emitting = true
			new_turnDust.scale.x *= sign(direction)
	
	if direction:
		velocity.x = direction * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
	
	if direction != 0 and not jumped:
		animator.play(\"Run\")
	elif not jumped:
		animator.play(\"Idle\")
	elif velocity.y <= 0:
		animator.play(\"Rising\")
	else:
		animator.play(\"Falling\")
		
	move_and_slide()
	
func flip():
	if velocity.x < 0:
		sprite.flip_h = true
	elif velocity.x > 0:
		sprite.flip_h = false

func groundDustEmission():
	if is_on_floor():
		groundDust.emitting = true

func playerPointing():
	return (get_global_mouse_position() - global_position).normalized()
"

[sub_resource type="RectangleShape2D" id="RectangleShape2D_lrwi6"]
size = Vector2(5, 10)

[sub_resource type="Gradient" id="Gradient_1tv6f"]
offsets = PackedFloat32Array(0.00510204, 1)
colors = PackedColorArray(1, 1, 1, 1, 1, 1, 1, 0)

[sub_resource type="Curve" id="Curve_xyofu"]
min_value = -1.0
_data = [Vector2(0.03125, -1), 0.0, 0.0, 0, 0, Vector2(0.973214, 1), 0.0, 0.0, 0, 0]
point_count = 2

[sub_resource type="Animation" id="Animation_5fp67"]
resource_name = "Falling"
length = 0.5505
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.149836, 0.295429, 0.451793),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [8, 9, 10, 11]
}

[sub_resource type="Animation" id="Animation_d4ty3"]
resource_name = "Idle"
length = 0.8
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.136997, 0.27617, 0.41752, 0.554517, 0.7),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [32, 33, 34, 35, 36, 37]
}

[sub_resource type="Animation" id="Animation_r77u1"]
resource_name = "Rising"
length = 0.477
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.130359, 0.258541, 0.382371),
"transitions": PackedFloat32Array(1, 1, 1, 1),
"update": 1,
"values": [16, 17, 18, 19]
}

[sub_resource type="Animation" id="Animation_lhknp"]
resource_name = "new_animation"
length = 0.627
loop_mode = 1
tracks/0/type = "value"
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/path = NodePath("Sprite2D:frame")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/keys = {
"times": PackedFloat32Array(0, 0.108705, 0.215015, 0.321544, 0.432316, 0.540912),
"transitions": PackedFloat32Array(1, 1, 1, 1, 1, 1),
"update": 1,
"values": [0, 1, 2, 3, 4, 5]
}
tracks/1/type = "method"
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/path = NodePath(".")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/keys = {
"times": PackedFloat32Array(0.2, 0.478237),
"transitions": PackedFloat32Array(1, 1),
"values": [{
"args": [],
"method": &"groundDustEmission"
}, {
"args": [],
"method": &"groundDustEmission"
}]
}

[sub_resource type="AnimationLibrary" id="AnimationLibrary_cqcai"]
_data = {
"Falling": SubResource("Animation_5fp67"),
"Idle": SubResource("Animation_d4ty3"),
"Rising": SubResource("Animation_r77u1"),
"Run": SubResource("Animation_lhknp")
}

[node name="CharacterBody2D" type="CharacterBody2D"]
collision_layer = 2
script = SubResource("GDScript_dtn1b")

[node name="CollisionShape2D" type="CollisionShape2D" parent="."]
position = Vector2(0.5, 2)
shape = SubResource("RectangleShape2D_lrwi6")

[node name="Camera2D" type="Camera2D" parent="."]
position = Vector2(1, 0)
offset = Vector2(0, -55)
zoom = Vector2(3.75, 3.75)
process_callback = 0
position_smoothing_enabled = true

[node name="groundDustParticles" type="CPUParticles2D" parent="."]
position = Vector2(1, 7)
emitting = false
amount = 9
lifetime = 0.2
one_shot = true
speed_scale = 1.05
explosiveness = 0.57
emission_shape = 3
emission_rect_extents = Vector2(2.635, 0.465)
direction = Vector2(0, 0)
spread = 0.0
gravity = Vector2(0, 0)
linear_accel_min = -1.65
linear_accel_max = 39.34
angle_max = 720.0
color_ramp = SubResource("Gradient_1tv6f")
hue_variation_max = 0.03
hue_variation_curve = SubResource("Curve_xyofu")

[node name="AnimationPlayer" type="AnimationPlayer" parent="."]
libraries = {
"": SubResource("AnimationLibrary_cqcai")
}

[node name="Sprite2D" type="Sprite2D" parent="."]
texture = ExtResource("1_nvqm5")
hframes = 8
vframes = 5
frame = 8

[node name="JumpBuffer" type="Timer" parent="."]
process_callback = 0
wait_time = 0.15
one_shot = true

[node name="Coyote" type="Timer" parent="."]
process_callback = 0
wait_time = 0.15
one_shot = true
